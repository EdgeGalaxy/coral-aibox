version: '3.8'

services:
  aibox-camera:
    build:
      context: ./aibox-camera
      dockerfile: Dockerfile
    image: ${USERNAME:-local}/aibox-camera:rt-${IMAGE_TAG:-v0.1.0}
    privileged: true
    network_mode: host
    environment:
      - MODEL_TYPE=rt
      - LOGURU_LEVEL=INFO
      - CONFIG_REMOTE_HOST=${CONFIG_REMOTE_HOST:-https://nbstore.oss-cn-shanghai.aliyuncs.com/coral-aibox/nx/}
      - CORAL_NODE_CONFIG_PATH=/root/.coral/aibox/configs/aibox-camera.json
      - CORAL_NODE_ACTIVATION_CODE=${CORAL_NODE_ACTIVATION_CODE:-}
    volumes:
      - /dev:/dev
      - $HOME/.coral:/root/.coral
    restart: unless-stopped # 如果服务退出，则除非手动停止，否则总是重启

  aibox-person:
    build:
      context: ./aibox-person
      dockerfile: Dockerfile_rt
    image: ${USERNAME:-local}/aibox-person:rt-${IMAGE_TAG:-v0.1.0}
    privileged: true
    depends_on:
      - aibox-camera
    network_mode: host
    environment:
      - MODEL_TYPE=rt
      - CONFIG_REMOTE_HOST=${CONFIG_REMOTE_HOST:-https://nbstore.oss-cn-shanghai.aliyuncs.com/coral-aibox/nx/}
      - CORAL_NODE_CONFIG_PATH=/root/.coral/aibox/configs/aibox-person.json
      - CORAL_NODE_ACTIVATION_CODE=${CORAL_NODE_ACTIVATION_CODE:-}
    volumes:
      - /dev:/dev
      - $HOME/.coral:/root/.coral
    restart: unless-stopped

  aibox-face:
    build:
      context: ./aibox-face
      dockerfile: Dockerfile_rt
    image: ${USERNAME:-local}/aibox-face:rt-${IMAGE_TAG:-v0.1.0}
    privileged: true
    depends_on:
      - aibox-person
    network_mode: host
    environment:
      - MODEL_TYPE=rt
      - LOGURU_LEVEL=INFO
      - CONFIG_REMOTE_HOST=${CONFIG_REMOTE_HOST:-https://nbstore.oss-cn-shanghai.aliyuncs.com/coral-aibox/nx/}
      - CORAL_NODE_CONFIG_PATH=/root/.coral/aibox/configs/aibox-face.json
      - CORAL_NODE_ACTIVATION_CODE=${CORAL_NODE_ACTIVATION_CODE:-}
    volumes:
      - /dev:/dev
      - $HOME/.coral:/root/.coral
    restart: unless-stopped

  aibox-record:
    build:
      context: ./aibox-record
      dockerfile: Dockerfile
    image: ${USERNAME:-local}/aibox-record:rt-${IMAGE_TAG:-v0.1.0}
    privileged: true
    depends_on:
      - aibox-person
    network_mode: host
    environment:
      - MODEL_TYPE=rt
      - LOGURU_LEVEL=INFO
      - CONFIG_REMOTE_HOST=${CONFIG_REMOTE_HOST:-https://nbstore.oss-cn-shanghai.aliyuncs.com/coral-aibox/nx/}
      - CORAL_NODE_CONFIG_PATH=/root/.coral/aibox/configs/aibox-record.json
      - CORAL_NODE_ACTIVATION_CODE=${CORAL_NODE_ACTIVATION_CODE:-}
    volumes:
      - /dev:/dev
      - $HOME/.coral:/root/.coral
    restart: unless-stopped

  aibox-report:
    build:
      context: ./aibox-report
      dockerfile: Dockerfile_rt
    image: ${USERNAME:-local}/aibox-report:rt-${IMAGE_TAG:-v0.1.0}
    privileged: true
    environment:
      - MODEL_TYPE=rt
      - LOGURU_LEVEL=INFO
      - CONFIG_REMOTE_HOST=${CONFIG_REMOTE_HOST:-https://nbstore.oss-cn-shanghai.aliyuncs.com/coral-aibox/nx/}
      - CORAL_NODE_CONFIG_PATH=/root/.coral/aibox/configs/aibox-report.json
      - CORAL_NODE_ACTIVATION_CODE=${CORAL_NODE_ACTIVATION_CODE:-}
      - MQTT_BROKER=${MQTT_BROKER:-127.0.0.1}
      - MQTT_PORT=${MQTT_PORT:-1883}
      - MQTT_USERNAME=${MQTT_USERNAME:-admin}
      - MQTT_PASSWORD=${MQTT_PASSWORD:-admin}
    depends_on:
      - aibox-face
      - aibox-person
    network_mode: host
    volumes:
      - /dev:/dev
      - $HOME/.coral:/root/.coral
    restart: unless-stopped

  aibox-web:
    build:
      context: ./aibox-web
      dockerfile: Dockerfile
    image: ${USERNAME:-local}/aibox-web:rt-${IMAGE_TAG:-v0.1.0}
    privileged: true
    ports:
      - 3000:3000
    volumes:
      - $HOME/.coral:/root/.coral
    restart: unless-stopped